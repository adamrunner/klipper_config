#####################################################################
# 	Macros
#####################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  G91                 ; relative positioning
  G1 Z30 F400         ; move the gantry up 30mm
  G92 E0              ; zero the extruder
  G1 E-10.0 F3600     ; retract filament
  M106 S0             ; turn off fans
  G90                 ; absolute positioning
  G0  X350 Y350 F3600 ; park nozzle at rear
  CLEAN_NOZZLE
  G0  X350 Y350 F3600 ; park nozzle at rear
  TURN_OFF_HEATERS
  BED_MESH_CLEAR
  status_ready
  CANCEL_PRINT_BASE


[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_BASE
gcode:
  status_leveling
  QUAD_GANTRY_LEVEL_BASE

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    status_meshing
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    G28
    G90
    G0 X175 Y175 Z30 F10000


[gcode_macro START_PRINT]
gcode:
  G92 E0
  M190 S{params.BED_TEMPERATURE}
  TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={params.CHAMBER_TEMPERATURE}
  SETUP_KAMP_MESHING LED_ENABLE=1 FUZZ_ENABLE=1
  SETUP_VORON_PURGE ADAPTIVE_ENABLE=1 FLOW_RATE=8 SIZE=20
  G32
  M109 S{params.NOZZLE_TEMPERATURE}
  status_printing
  VORON_PURGE

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        STATUS_HOMING
        G28
    {% endif %}

[gcode_macro _CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28 ; home if not already homed
        {% endif %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}

[gcode_macro FINISH_PRINT]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    G0 Z{z_safe} F3600             ; move nozzle away from bed
    G90                            ; absolute positioning
    M107                           ; turn off fan
    G0  X350 Y350 F3600            ; park nozzle at rear
    CLEAN_NOZZLE
    TURN_OFF_HEATERS
    G0  X350 Y350 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    status_ready

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+2}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


[gcode_macro list_sensors]
gcode:
  { action_respond_info(printer.heaters.available_heaters | join(', ')) }
  { action_respond_info(printer.heaters.available_sensors | join(', ')) }